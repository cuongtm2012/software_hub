# Gateweaver Configuration - Enhanced with proper routing and debugging
# Optimized for microservices architecture with prefix matching

# Server configuration
server:
  port: 8080
  host: "0.0.0.0"

# Health check server
health:
  port: 8081
  path: "/health"

# Metrics server  
metrics:
  enabled: true
  port: 8082
  path: "/metrics"

# Enhanced logging configuration for debugging
logging:
  level: "debug"  # Enhanced for troubleshooting
  format: "json"
  access_log: true
  error_log: true

# CORS configuration with explicit headers
cors:
  enabled: true
  allow_origins:
    - "http://localhost:5000"
    - "http://localhost:3000"
    - "http://localhost:8080"
    - "https://*.vercel.app"
  allow_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "DELETE"
    - "PATCH"
    - "OPTIONS"
    - "HEAD"
  # Explicit headers instead of wildcard for better compatibility
  allow_headers:
    - "Accept"
    - "Authorization"
    - "Content-Type"
    - "X-CSRF-Token"
    - "X-Requested-With"
    - "X-API-Key"
    - "X-User-ID"
    - "Cache-Control"
    - "Pragma"
    - "Origin"
    - "Accept-Encoding"
    - "Accept-Language"
  expose_headers:
    - "X-Total-Count"
    - "X-Response-Time"
    - "X-Request-ID"
  allow_credentials: true
  max_age: 86400

# Rate limiting
rate_limiting:
  enabled: true
  requests_per_minute: 1000
  burst: 50

# Load balancing
load_balancing:
  strategy: "round_robin"

# Security headers
security:
  max_request_size: "10MB"
  headers:
    add:
      X-Frame-Options: "DENY"
      X-Content-Type-Options: "nosniff"
      X-XSS-Protection: "1; mode=block"
      Referrer-Policy: "strict-origin-when-cross-origin"
      X-Gateway: "Gateweaver"
      X-Request-ID: "auto-generated"
    remove:
      - "Server"
      - "X-Powered-By"

# Circuit breaker
circuit_breaker:
  enabled: true
  failure_threshold: 5
  recovery_timeout: "30s"
  half_open_max_requests: 3

# Upstream services with validated Docker network URLs
upstreams:
  email-service:
    servers:
      - url: "http://softwarehub-email-service:3001"
        weight: 1
    health_check:
      path: "/health"
      interval: "15s"  # More frequent checks
      timeout: "5s"    # Faster timeout
      unhealthy_threshold: 2
      healthy_threshold: 1

  chat-service:
    servers:
      - url: "http://softwarehub-chat-service:3002"
        weight: 1
    health_check:
      path: "/health"
      interval: "15s"
      timeout: "5s"
      unhealthy_threshold: 2
      healthy_threshold: 1

  notification-service:
    servers:
      - url: "http://softwarehub-notification-service:3003"
        weight: 1
    health_check:
      path: "/health"
      interval: "15s"
      timeout: "5s"
      unhealthy_threshold: 2
      healthy_threshold: 1

  main-app:
    servers:
      - url: "http://softwarehub-app:5000"
        weight: 1
    health_check:
      path: "/health"
      interval: "15s"
      timeout: "5s"
      unhealthy_threshold: 2
      healthy_threshold: 1

# Routes configuration with proper prefix matching
routes:
  # Microservice routes with prefix matching (highest priority)
  - path: "/api/email"
    upstream: "email-service"
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
    strip_path: false  # Keep full path for backend services
    priority: 1
    timeout: "30s"
    prefix_match: true  # Enable prefix matching
    headers:
      add:
        X-Service: "email-service"
        X-Route-Type: "microservice"

  - path: "/api/chat"
    upstream: "chat-service"
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
    strip_path: false
    priority: 2
    timeout: "30s"
    prefix_match: true
    headers:
      add:
        X-Service: "chat-service"
        X-Route-Type: "microservice"

  - path: "/api/notifications"
    upstream: "notification-service"
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS"]
    strip_path: false
    priority: 3
    timeout: "30s"
    prefix_match: true
    headers:
      add:
        X-Service: "notification-service"
        X-Route-Type: "microservice"

  # Health check routes for individual services
  - path: "/health/email"
    upstream: "email-service"
    methods: ["GET"]
    strip_path: true
    priority: 10
    rewrite_path: "/health"

  - path: "/health/chat"
    upstream: "chat-service"
    methods: ["GET"]
    strip_path: true
    priority: 11
    rewrite_path: "/health"

  - path: "/health/notifications"
    upstream: "notification-service"
    methods: ["GET"]
    strip_path: true
    priority: 12
    rewrite_path: "/health"

  # API documentation routes
  - path: "/api/docs"
    upstream: "main-app"
    methods: ["GET"]
    strip_path: false
    priority: 20

  # Main application routes (lowest priority - catch-all)
  - path: "/"
    upstream: "main-app"
    methods: ["GET", "POST", "PUT", "DELETE", "PATCH", "OPTIONS", "HEAD"]
    strip_path: false
    priority: 100
    headers:
      add:
        X-Service: "main-app"
        X-Route-Type: "main-application"

# Debugging and monitoring settings
debug:
  enabled: true
  log_requests: true
  log_responses: false  # Don't log response bodies for performance
  log_headers: true
  request_id_header: "X-Request-ID"

# Request/Response transformation
transform:
  request:
    # Add common headers to all requests
    headers:
      add:
        X-Forwarded-By: "Gateweaver"
        X-Timestamp: "auto"
  response:
    # Add common headers to all responses
    headers:
      add:
        X-Gateway-Version: "1.0.0"
        X-Response-Time: "auto"

# Retry configuration
retry:
  enabled: true
  max_attempts: 3
  backoff_strategy: "exponential"
  base_delay: "100ms"
  max_delay: "1s"