events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic Settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    
    # Gzip Settings
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        image/svg+xml;

    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=email:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=notifications:10m rate=5r/s;
    
    # Upstream servers - Updated for manual main app + Docker services
    upstream softwarehub_app {
        least_conn;
        server host.docker.internal:5000 max_fails=3 fail_timeout=30s;
    }
    
    upstream email_service {
        least_conn;
        server 172.20.0.5:3001 max_fails=3 fail_timeout=30s;
    }
    
    upstream chat_service {
        least_conn;
        server chat-service:3002 max_fails=3 fail_timeout=30s;
    }
    
    upstream notification_service {
        least_conn;
        server 172.20.0.8:3003 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        
        # ===== MICROSERVICES API ROUTING (MUST BE BEFORE GENERAL /api/) =====
        
        # Email Service APIs - Direct routing to email microservice
        location /api/email/ {
            limit_req zone=email burst=10 nodelay;
            proxy_pass http://email_service/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
            proxy_connect_timeout 10s;
        }
        
        # Notification Service APIs - Direct routing to notification microservice
        location /api/notifications/ {
            limit_req zone=notifications burst=15 nodelay;
            proxy_pass http://notification_service/api/notifications/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Content-Type $content_type;
            proxy_set_header Content-Length $content_length;
            proxy_pass_request_body on;
            proxy_pass_request_headers on;
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
        }
        
        # Chat Service APIs and WebSocket - Direct routing to chat microservice
        location /api/chat/ {
            proxy_pass http://chat_service/api/chat/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # Socket.IO for real-time chat
        location /socket.io/ {
            proxy_pass http://softwarehub_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # ===== MAIN APPLICATION APIS (SPECIFIC ROUTES FIRST) =====
        
        # Authentication APIs - Keep in main app
        location ~ ^/api/(login|logout|register|forgot-password|reset-password|user)$ {
            limit_req zone=login burst=5 nodelay;
            proxy_pass http://softwarehub_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Admin APIs - Keep in main app
        location /api/admin/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://softwarehub_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # All other APIs - Default to main app (MUST BE LAST!)
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://softwarehub_app;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # ===== STATIC CONTENT AND FRONTEND =====
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://softwarehub_app;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # Main application - Frontend and remaining routes
        location / {
            proxy_pass http://softwarehub_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
        
        # ===== HEALTH AND MONITORING =====
        
        # Health checks
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Service health checks
        location /health/email {
            proxy_pass http://email_service/health;
            access_log off;
        }
        
        location /health/notifications {
            proxy_pass http://notification_service/health;
            access_log off;
        }
        
        location /health/chat {
            proxy_pass http://chat_service/health;
            access_log off;
        }
    }

    # HTTPS server (disabled until SSL certificates are properly configured)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     # SSL configuration (uncomment when certificates are available)
    #     # ssl_certificate /etc/nginx/ssl/cert.pem;
    #     # ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     # ssl_protocols TLSv1.2 TLSv1.3;
    #     # ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    #     # ssl_prefer_server_ciphers off;
    #     
    #     # Redirect all HTTPS traffic to main app
    #     location / {
    #         proxy_pass http://softwarehub_app;
    #         proxy_http_version 1.1;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto https;
    #     }
    # }
}