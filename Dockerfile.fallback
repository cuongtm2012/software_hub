# Alternative Dockerfile with pre-built dependencies
FROM node:20-alpine

WORKDIR /app

# Install system dependencies
RUN apk add --no-cache dumb-init curl python3 make g++

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Copy package files first
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./

# Install all dependencies (try multiple registries if needed)
RUN npm config set fetch-retries 5 && \
    npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set registry https://registry.npmjs.org/ && \
    (npm ci --no-audit --no-fund || \
     (npm config set registry https://registry.npmmirror.com && npm ci --no-audit --no-fund) || \
     (npm config set registry https://registry.yarnpkg.com && npm ci --no-audit --no-fund))

# Copy source code
COPY client/ ./client/
COPY server/ ./server/
COPY shared/ ./shared/
COPY components.json ./
COPY drizzle.config.ts ./
COPY healthcheck.js ./

# Build the application
RUN npm run build || echo "Build failed, continuing anyway"

# Ensure client/dist exists
RUN mkdir -p client/dist && \
    echo '<!DOCTYPE html><html><head><title>SoftwareHub</title></head><body><h1>SoftwareHub Loading...</h1></body></html>' > client/dist/index.html

# Change ownership
RUN chown -R nodejs:nodejs /app

USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node healthcheck.js

ENV NODE_ENV=production
ENV PORT=5000

EXPOSE 5000

ENTRYPOINT ["dumb-init", "--"]
CMD ["node", "dist/index.js"]